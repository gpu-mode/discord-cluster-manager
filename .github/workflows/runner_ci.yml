name: Runner CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  check-cuda:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install modal pytest
          pip install -r requirements.txt

      - name: Deploy Modal app
        run: |
          modal deploy src/discord-cluster-manager/modal_runner_archs.py
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}

      - name: Run CUDA test via Modal
        run: |
          python -c "
          import modal
          import subprocess
          import sys
          
          # Run pytest via Modal on GPU
          func = modal.Function.lookup('discord-bot-runner', 'run_cuda_script_t4')
          result = func.remote(config={
              'code': open('scripts/ci_test_cuda.py').read(),
              'language': 'py',
              'timeout': 300
          })
          
          print('Modal execution result:', result)
          if result.get('success') != True:
              print('CUDA test failed on Modal')
              sys.exit(1)
          "
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}

  check-pytorch:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          pip install modal pytest
          pip install -r requirements.txt

      - name: Deploy Modal app
        run: |
          modal deploy src/discord-cluster-manager/modal_runner_archs.py
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}

      - name: Run PyTorch test via Modal
        run: |
          python -c "
          import modal
          import subprocess
          import sys
          
          # Run pytest via Modal on GPU
          func = modal.Function.lookup('discord-bot-runner', 'run_pytorch_script_t4')
          result = func.remote(config={
              'code': open('scripts/ci_test_python.py').read(),
              'language': 'py',
              'timeout': 300
          })
          
          print('Modal execution result:', result)
          if result.get('success') != True:
              print('PyTorch test failed on Modal')
              sys.exit(1)
          "
        env:
          MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
          MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
