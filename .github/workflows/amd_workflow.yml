name: AMD PyTorch Job
on:
  workflow_dispatch:
    inputs:
      payload:
        description: 'Content of the user submission, as json string'
        required: true
        type: string
      runner:
        description: 'AMD runner to run workflow on'
        required: true
        default: "amdgpu-mi300-x86-64"
        type: string
      requirements:
        description: 'Contents for a requirements.txt file'
        required: false
        type: string

jobs:
  run:
    runs-on: ${{ github.event.inputs.runner }}
    strategy:
      fail-fast: false
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v3
    
    - name: Create input files securely
      run: |
        # Using base64 encoding to prevent content from being directly visible in logs
        # then decode directly to file without displaying content
        echo '${{ github.event.inputs.payload }}' | base64 > payload.json.b64
        base64 --decode payload.json.b64 > payload.json
        rm payload.json.b64

    - name: Set venv directory based on runner
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          echo "VENV_DIR=/groups/aig_sharks/pytorch_venv" >> $GITHUB_ENV
        fi

    - name: Setup Virtual Environment and Install Dependencies
      shell: bash
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          python -m venv ${VENV_DIR}
          source ${VENV_DIR}/bin/activate
        fi
        pip install --upgrade pip
        if [[ -n "${{ github.event.inputs.requirements }}" ]]; then
          # Same secure approach for requirements
          echo '${{ github.event.inputs.requirements }}' | base64 > requirements.txt.b64
          base64 --decode requirements.txt.b64 > requirements.txt
          rm requirements.txt.b64
          pip install -r "requirements.txt"
        fi

    - name: Run script
      shell: bash
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          source ${VENV_DIR}/bin/activate
        fi
        python3 .github/workflows/runner.py

    - name: Upload training artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: run-result
        path: |
          result.json
