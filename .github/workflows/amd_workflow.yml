name: AMD PyTorch Job
on:
  workflow_dispatch:
    inputs:
      payload_base64:
        description: 'Base64 encoded zipped content of the user submission'
        required: true
        type: string
      runner:
        description: 'AMD runner to run workflow on'
        required: true
        default: "amdgpu-mi300-x86-64"
        type: string
      requirements:
        description: 'Contents for a requirements.txt file'
        required: false
        type: string

jobs:
  run:
    runs-on: ${{ github.event.inputs.runner }}
    strategy:
      fail-fast: false
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Decode and Unzip Payload
      shell: bash
      run: |
        echo "${{ github.event.inputs.payload_base64 }}" | base64 --decode > payload.zip
        unzip payload.zip -d .
        # Verify payload.json exists after unzipping
        if [[ ! -f "payload.json" ]]; then
          echo "Error: payload.json not found after unzipping."
          exit 1
        fi
        cat payload.json # Optional: verify content for debugging

    - name: Create input files
      shell: bash
      run: |
        # payload.json is now created in the previous step
        echo "payload.json already exists from unzip step."

    - name: Set venv directory based on runner
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          echo "VENV_DIR=/groups/aig_sharks/pytorch_venv" >> $GITHUB_ENV
        fi

    - name: Setup Virtual Environment and Install Dependencies
      shell: bash
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          python -m venv ${VENV_DIR}
          source ${VENV_DIR}/bin/activate
        fi
        pip install --upgrade pip
        if [[ -n "${{ github.event.inputs.requirements }}" ]]; then
          cat > "requirements.txt" <<'EOL'
          ${{ github.event.inputs.requirements }}
        EOL
        pip install -r "requirements.txt"
        fi

    - name: Run script
      shell: bash
      run: |
        if [[ "${{ github.event.inputs.runner }}" == "amdgpu-mi250-x86-64" ]]; then
          source ${VENV_DIR}/bin/activate
        fi
        python3 .github/workflows/runner.py
        cat result.json  # Debug: show output

    - name: Upload training artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: run-result
        path: |
          result.json
